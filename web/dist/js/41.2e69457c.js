"use strict";(self["webpackChunkweb"]=self["webpackChunkweb"]||[]).push([[41],{41:function(t,e,s){s.r(e),s.d(e,{default:function(){return m}});var o=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"columns is-desktop is-centered"},[s("div",{staticClass:"column is-9"},[s("section",[s("b-table",{attrs:{data:t.crons.data,paginated:t.crons.isPaginated,"per-page":t.crons.perPage,"current-page":t.crons.currentPage,"pagination-simple":t.crons.isPaginationSimple,"pagination-position":t.crons.paginationPosition,"pagination-rounded":t.crons.isPaginationRounded,"default-sort":"name","aria-next-label":"Next page","aria-previous-label":"Previous page","aria-page-label":"Page","aria-current-label":"Current page"},on:{"update:currentPage":function(e){return t.$set(t.crons,"currentPage",e)},"update:current-page":function(e){return t.$set(t.crons,"currentPage",e)}}},[s("b-table-column",{attrs:{field:"id",label:"Backup Cron ID",centered:""},scopedSlots:t._u([{key:"default",fn:function(e){return[s("span",{staticClass:"tag is-light"},[t._v(" "+t._s(e.row.id)+" ")])]}}])}),s("b-table-column",{attrs:{field:"name",label:"Name",centered:""},scopedSlots:t._u([{key:"default",fn:function(e){return[s("span",{staticClass:"tag is-light"},[t._v(" "+t._s(e.row.name)+" ")])]}}])}),s("b-table-column",{attrs:{field:"jobs",label:"Jobs",centered:""},scopedSlots:t._u([{key:"default",fn:function(e){return[s("span",{staticClass:"tag is-warning is-light"},[t._v(" Pending: "+t._s(e.row.pendingJobs)+" ")]),t._v(" - "),s("span",{staticClass:"tag is-success is-light"},[t._v(" Success: "+t._s(e.row.successJobs)+" ")]),t._v(" - "),s("span",{staticClass:"tag is-danger is-light"},[t._v(" Failed: "+t._s(e.row.failedJobs)+" ")])]}}])}),s("b-table-column",{attrs:{field:"status",label:"Last Run",centered:""},scopedSlots:t._u([{key:"default",fn:function(e){return[s("span",{staticClass:"tag is-success is-light"},[t._v(" "+t._s(new Date(e.row.lastRun).toLocaleString())+" ")])]}}])}),s("b-table-column",{attrs:{field:"createdAt",label:"Creation Date",centered:""},scopedSlots:t._u([{key:"default",fn:function(e){return[s("span",{staticClass:"tag is-info is-light"},[t._v(" "+t._s(new Date(e.row.createdAt).toLocaleDateString())+" ")])]}}])}),s("b-table-column",{attrs:{label:"Actions",centered:""},scopedSlots:t._u([{key:"default",fn:function(e){return[s("b-button",{attrs:{size:"is-small",type:"is-link is-warning is-light"},on:{click:function(s){return t.editHostCronAction(t.$route.params.hostId,e.row.id)}}},[t._v("Edit")]),t._v(" - "),s("b-button",{attrs:{size:"is-small",type:"is-link is-danger is-light"},on:{click:function(s){return t.deleteHostCronAction(t.$route.params.hostId,e.row.id)}}},[t._v("Delete")])]}}])}),s("td",{attrs:{slot:"empty",colspan:"6"},slot:"empty"},[t._v("No records found.")])],1)],1),s("hr"),s("b-button",{attrs:{type:"is-success is-light",size:"is-small"},on:{click:function(e){return t.newHostCronAction(t.$route.params.hostId)}}},[t._v("New Backup Cron")]),t._v(" - "),s("b-button",{attrs:{type:"is-danger is-light",size:"is-small"},on:{click:function(e){return t.deleteHostAction(t.$route.params.hostId)}}},[t._v("Delete Host")]),s("b-modal",{attrs:{active:t.form.isActive,"has-modal-card":""},on:{"update:active":function(e){return t.$set(t.form,"isActive",e)}}},[s("div",{staticClass:"modal-card",staticStyle:{width:"auto"}},[s("header",{staticClass:"modal-card-head"},[s("p",{staticClass:"modal-card-title"},[t._v(t._s(t.form.title))])]),s("section",{staticClass:"modal-card-body"},[s("b-field",{attrs:{label:"Backup Name"}},[s("b-input",{attrs:{type:"text",placeholder:"Application Database",required:""},model:{value:t.form.name,callback:function(e){t.$set(t.form,"name",e)},expression:"form.name"}})],1),s("b-field",{attrs:{label:"Backup Type"}},[s("b-select",{attrs:{placeholder:"Select a type",expanded:""},model:{value:t.form.type,callback:function(e){t.$set(t.form,"type",e)},expression:"form.type"}},[s("option",{attrs:{value:"@BackupDirectory"}},[t._v("Directory")]),s("option",{attrs:{value:"@BackupMySQL"}},[t._v("MySQL")]),s("option",{attrs:{value:"@BackupSQLite"}},[t._v("SQLite")])])],1),s("b-field",{attrs:{label:"Run Script Before"}},[s("b-input",{attrs:{type:"text",placeholder:"/usr/bin/innobackupex --incremental"},model:{value:t.form.beforeScript,callback:function(e){t.$set(t.form,"beforeScript",e)},expression:"form.beforeScript"}})],1),"@BackupDirectory"==t.form.type?[s("b-field",{attrs:{label:"Directory Path"}},[s("b-input",{attrs:{type:"text",placeholder:"/etc/backups/app_database",required:""},model:{value:t.form.directory,callback:function(e){t.$set(t.form,"directory",e)},expression:"form.directory"}})],1)]:t._e(),"@BackupSQLite"==t.form.type?[s("b-field",{attrs:{label:"SQLite Path"}},[s("b-input",{attrs:{type:"text",placeholder:"/etc/apps/db.sqlite3",required:""},model:{value:t.form.sqlitePath,callback:function(e){t.$set(t.form,"sqlitePath",e)},expression:"form.sqlitePath"}})],1)]:t._e(),"@BackupMySQL"==t.form.type?[s("b-field",{attrs:{label:"MySQL Host"}},[s("b-input",{attrs:{type:"text",placeholder:"127.0.0.1",required:""},model:{value:t.form.mysqlHost,callback:function(e){t.$set(t.form,"mysqlHost",e)},expression:"form.mysqlHost"}})],1),s("b-field",{attrs:{label:"MySQL Port"}},[s("b-input",{attrs:{type:"text",placeholder:"3306",required:""},model:{value:t.form.mysqlPort,callback:function(e){t.$set(t.form,"mysqlPort",e)},expression:"form.mysqlPort"}})],1),s("b-field",{attrs:{label:"MySQL Username"}},[s("b-input",{attrs:{type:"text",placeholder:"root",required:""},model:{value:t.form.mysqlUsername,callback:function(e){t.$set(t.form,"mysqlUsername",e)},expression:"form.mysqlUsername"}})],1),s("b-field",{attrs:{label:"MySQL Password"}},[s("b-input",{attrs:{type:"text",placeholder:"root",required:""},model:{value:t.form.mysqlPassword,callback:function(e){t.$set(t.form,"mysqlPassword",e)},expression:"form.mysqlPassword"}})],1),s("b-field",{attrs:{label:"MySQL Database Name"}},[s("b-input",{attrs:{type:"text",placeholder:"",required:""},model:{value:t.form.mysqlDatabase,callback:function(e){t.$set(t.form,"mysqlDatabase",e)},expression:"form.mysqlDatabase"}})],1),s("b-field",{attrs:{label:"MySQL Table Name"}},[s("b-input",{attrs:{type:"text",placeholder:"",required:""},model:{value:t.form.mysqlTable,callback:function(e){t.$set(t.form,"mysqlTable",e)},expression:"form.mysqlTable"}})],1),s("b-field",{attrs:{label:"Backup All Databases"}},[s("b-select",{attrs:{placeholder:"Select to backup all",expanded:""},model:{value:t.form.mysqlAllDatabases,callback:function(e){t.$set(t.form,"mysqlAllDatabases",e)},expression:"form.mysqlAllDatabases"}},[s("option",{attrs:{value:"false"}},[t._v("No")]),s("option",{attrs:{value:"true"}},[t._v("Yes")])])],1),s("b-field",{attrs:{label:"MySQL Dump Options"}},[s("b-input",{attrs:{type:"text",placeholder:"--single-transaction,--quick,--lock-tables=false",required:""},model:{value:t.form.mysqlOptions,callback:function(e){t.$set(t.form,"mysqlOptions",e)},expression:"form.mysqlOptions"}})],1)]:t._e(),s("b-field",{attrs:{label:"Backup Interval Type"}},[s("b-select",{attrs:{placeholder:"Select a type",expanded:""},model:{value:t.form.intervalType,callback:function(e){t.$set(t.form,"intervalType",e)},expression:"form.intervalType"}},[s("option",{attrs:{value:"@second"}},[t._v("Second")]),s("option",{attrs:{value:"@minute"}},[t._v("Minute")]),s("option",{attrs:{value:"@hour"}},[t._v("Hour")]),s("option",{attrs:{value:"@day"}},[t._v("Day")]),s("option",{attrs:{value:"@month"}},[t._v("Month")])])],1),s("b-field",{attrs:{label:"Backup Interval"}},[s("b-input",{attrs:{type:"number",placeholder:"30",required:""},model:{value:t.form.interval,callback:function(e){t.$set(t.form,"interval",e)},expression:"form.interval"}})],1),s("b-field",{attrs:{label:"Retention Days"}},[s("b-input",{attrs:{type:"number",placeholder:"10",required:""},model:{value:t.form.retention,callback:function(e){t.$set(t.form,"retention",e)},expression:"form.retention"}})],1)],2),s("footer",{staticClass:"modal-card-foot"},[s("button",{staticClass:"button",attrs:{type:"button"},on:{click:function(e){return t.closeFormAction()}}},[t._v(" Close ")]),s("button",{staticClass:"button is-primary",on:{click:t.submitForm}},[t._v(" Submit ")])])])])],1)])},r=[],a={name:"HostPage",data(){return{crons:{data:[],isPaginated:!0,isPaginationSimple:!1,isPaginationRounded:!0,paginationPosition:"bottom",currentPage:1,perPage:15},form:{isActive:!1,title:"",name:"",interval:30,retention:10,beforeScript:"",directory:"",mysqlHost:"127.0.0.1",mysqlPort:"3306",mysqlUsername:"root",mysqlPassword:"root",mysqlAllDatabases:"false",mysqlDatabase:"",mysqlTable:"",mysqlOptions:"--single-transaction,--quick,--lock-tables=false",intervalType:"@minute",type:"@BackupDirectory",hostId:"",cronId:"",sqlitePath:"/etc/apps/db.sqlite3"},loader:{isFullPage:!0,ref:null}}},methods:{loading(){this.loader.ref=this.$buefy.loading.open({container:this.loader.isFullPage?null:this.$refs.element.$el})},deleteHostAction(t){this.$buefy.dialog.confirm({message:"Are you sure?",onConfirm:()=>{this.$store.dispatch("host/deleteHostAction",{hostname:t}).then((()=>{this.$buefy.toast.open({message:"Host deleted successfully",type:"is-success"}),this.$router.push("/hosts")}),(t=>{t.response.data.errorMessage?this.$buefy.toast.open({message:t.response.data.errorMessage,type:"is-danger is-light"}):this.$buefy.toast.open({message:"Error status code: "+t.response.status,type:"is-danger is-light"})}))}})},deleteHostCronAction(t,e){this.$buefy.dialog.confirm({message:"Are you sure?",onConfirm:()=>{this.$store.dispatch("host/deleteHostCronAction",{hostname:t,cronId:e}).then((()=>{this.$buefy.toast.open({message:"Host cron deleted successfully",type:"is-success"}),this.loadInitialState()}),(t=>{t.response.data.errorMessage?this.$buefy.toast.open({message:t.response.data.errorMessage,type:"is-danger is-light"}):this.$buefy.toast.open({message:"Error status code: "+t.response.status,type:"is-danger is-light"})}))}})},editHostCronAction(t,e){this.form.title="Edit Host Backup Cron",this.form.isActive=!0,this.form.name="",this.form.interval=30,this.form.retention=10,this.form.directory="",this.form.beforeScript="",this.form.intervalType="@minute",this.form.type="@BackupDirectory",this.form.hostId=t,this.form.cronId=e,this.form.sqlitePath="/etc/apps/db.sqlite3",this.$store.dispatch("host/getHostCronAction",{hostname:t,cronId:e}).then((()=>{let t=this.$store.getters["host/getHostCronResult"];t&&(this.form.name=t.name,this.form.interval=t.interval,this.form.retention=t.request.retentionDays,this.form.beforeScript=t.request.beforeScript,this.form.directory=t.request.directory,this.form.mysqlHost=t.request.mysqlHost,this.form.mysqlPort=t.request.mysqlPort,this.form.mysqlUsername=t.request.mysqlUsername,this.form.mysqlPassword=t.request.mysqlPassword,this.form.mysqlAllDatabases=t.request.mysqlAllDatabases,this.form.mysqlDatabase=t.request.mysqlDatabase,this.form.mysqlTable=t.request.mysqlTable,this.form.mysqlOptions=t.request.mysqlOptions,this.form.sqlitePath=t.request.sqlitePath,this.form.intervalType=t.intervalType,this.form.type=t.request.type)}),(t=>{t.response.data.errorMessage?this.$buefy.toast.open({message:t.response.data.errorMessage,type:"is-danger is-light"}):this.$buefy.toast.open({message:"Error status code: "+t.response.status,type:"is-danger is-light"})}))},newHostCronAction(t){this.form.title="New Host Backup Cron",this.form.isActive=!0,this.form.name="",this.form.interval=30,this.form.retention=10,this.form.directory="",this.form.beforeScript="",this.form.intervalType="@minute",this.form.type="@BackupDirectory",this.form.hostId=t,this.form.cronId="",this.form.mysqlHost="127.0.0.1",this.form.mysqlPort="3306",this.form.mysqlUsername="root",this.form.mysqlPassword="root",this.form.mysqlAllDatabases="false",this.form.mysqlDatabase="",this.form.mysqlTable="",this.form.mysqlOptions="--single-transaction,--quick,--lock-tables=false",this.form.sqlitePath="/etc/apps/db.sqlite3"},closeFormAction(){this.form.isActive=!1,this.form.title="",this.form.name="",this.form.interval=30,this.form.retention=10,this.form.directory="",this.form.beforeScript="",this.form.intervalType="@minute",this.form.type="@BackupDirectory",this.form.hostId="",this.form.cronId="",this.form.mysqlHost="127.0.0.1",this.form.mysqlPort="3306",this.form.mysqlUsername="root",this.form.mysqlPassword="root",this.form.mysqlAllDatabases="false",this.form.mysqlDatabase="",this.form.mysqlTable="",this.form.mysqlOptions="--single-transaction,--quick,--lock-tables=false",this.form.sqlitePath="/etc/apps/db.sqlite3"},submitForm(){let t="host/createHostCronAction";""!=this.form.cronId&&(t="host/updateHostCronAction"),this.$store.dispatch(t,{hostname:this.form.hostId,cronId:this.form.cronId,name:this.form.name,interval:this.form.interval.toString(),retention:this.form.retention.toString(),beforeScript:this.form.beforeScript,directory:this.form.directory,intervalType:this.form.intervalType,mysqlHost:this.form.mysqlHost,mysqlPort:this.form.mysqlPort,mysqlUsername:this.form.mysqlUsername,mysqlPassword:this.form.mysqlPassword,mysqlAllDatabases:this.form.mysqlAllDatabases,mysqlDatabase:this.form.mysqlDatabase,mysqlTable:this.form.mysqlTable,mysqlOptions:this.form.mysqlOptions,sqlitePath:this.form.sqlitePath,type:this.form.type}).then((()=>{this.$buefy.toast.open({message:"Backup cron submitted successfully",type:"is-success"}),this.form.isActive=!1,this.loadInitialState()}),(t=>{t.response.data.errorMessage?this.$buefy.toast.open({message:t.response.data.errorMessage,type:"is-danger is-light"}):this.$buefy.toast.open({message:"Error status code: "+t.response.status,type:"is-danger is-light"}),this.form.isActive=!1}))},loadInitialState(){this.loading(),this.$store.dispatch("host/getHostCronsAction",{hostname:this.$route.params.hostId}).then((()=>{let t=this.$store.getters["host/getHostCronsResult"];t.crons?this.crons.data=t.crons:this.crons.data=[],this.loader.ref.close()}),(t=>{this.$buefy.toast.open({message:t.response.data.errorMessage,type:"is-danger is-light"}),this.loader.ref.close()}))}},mounted(){this.loadInitialState()}},i=a,l=s(1),n=(0,l.Z)(i,o,r,!1,null,null,null),m=n.exports}}]);
//# sourceMappingURL=41.2e69457c.js.map